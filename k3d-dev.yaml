---
apiVersion: k3d.io/v1alpha4
kind: Simple
metadata:
  name: execdat-dev
servers: 1
agents: 0
image: docker.io/rancher/k3s:v1.25.6-k3s1

# kubeAPI: # same as `--api-port myhost.my.domain:6445` (where the name would resolve to 127.0.0.1)
#   host: "myhost.my.domain" # important for the `server` setting in the kubeconfig
#   hostIP: "127.0.0.1" # where the Kubernetes API will be listening on
#   hostPort: "6445" # where the Kubernetes API listening port will be mapped to on your host system
network: k3d-network # same as `--network my-custom-net`
ports:
  - port: 8080:80 # same as `--port '8080:80@loadbalancer'`
    nodeFilters:
      - loadbalancer

# registries: # define how registries should be created or used
#   create: # creates a default registry to be used with the cluster; same as `--registry-create registry.localhost`
#     name: registry.localhost
#     host: "0.0.0.0"
#     hostPort: "5000"
#     proxy: # omit this to have a "normal" registry, set this to create a registry proxy (pull-through cache)
#       remoteURL: https://registry-1.docker.io # mirror the DockerHub registry
#       username: "" # unauthenticated
#       password: "" # unauthenticated
#     volumes:
#       - /some/path:/var/lib/registry # persist registry data locally
#   use:
#     - k3d-myotherregistry:5000 # some other k3d-managed registry; same as `--registry-use 'k3d-myotherregistry:5000'`
#   config: | # define contents of the `registries.yaml` file (or reference a file); same as `--registry-config /path/to/config.yaml`
#     mirrors:
#       "my.company.registry":
#         endpoint:
#           - http://my.company.registry:5000

options:
  k3s: # options passed on to K3s itself
    extraArgs: # additional arguments passed to the `k3s server|agent` command; same as `--k3s-arg`
      - arg: "--tls-san=k3d.localhost"
        nodeFilters:
          - server:*
  kubeconfig:
    updateDefaultKubeconfig: true # add new cluster to your default Kubeconfig; same as `--kubeconfig-update-default` (default: true)
    switchCurrentContext: true # also set current-context to the new cluster's context; same as `--kubeconfig-switch-context` (default: true)
